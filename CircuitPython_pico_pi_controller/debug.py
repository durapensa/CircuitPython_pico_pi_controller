# AUTOGENERATED! DO NOT EDIT! File to edit: 05_debug.ipynb (unless otherwise specified).

__all__ = ['controller']

# Cell
from CircuitPython_pico_pi_controller import *

# Cell
#hacky to run debugging inside notebook & standalone
try:
    from .core import *
    print("importing PPC using notebook")
except:
    try:
        from .CircuitPython_pico_pi_controller import *
        print("importing PPC using nbdev showdoc")
    except:
        from CircuitPython_pico_pi_controller import *
        print("importing PPC using CP on MCU")

try:
    import adafruit_logging as logging
except:
    import logging

# Cell
try:
    logger = logging.getLogger('PPC')
except:
    logger = logging.getLogger()
logger.setLevel(logging.DEBUG)

try:
    logging.basicConfig(level = logging.DEBUG)
except:
    pass

# Cell
import busio
from adafruit_bus_device import i2c_device

controller=PPController()

controller.i2c=busio.I2C(scl=controller.scl,sda=controller.sda,frequency=controller.frequency,timeout=controller.timeout)
print("created I2C object: SCL SDA frequency timeout: ",controller.scl,controller.sda,controller.frequency,controller.timeout)

controller.autoAddDevices()

print("noident:",controller.noident)
print("devices:",controller.devices)

for x in range(12):
   controller.identifyNew()

#while not controller.devices:
#   controller.identifyNew()

while not controller.i2c.try_lock():
    pass
print (controller.i2c.scan())
"""CP/MCU: ValueError: Object has been deinitialized and can no longer be used. Create a new object."""

#for i in controller.noident:
#    with i.device:
#        pass
